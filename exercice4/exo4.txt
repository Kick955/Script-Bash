Commandes et Syntaxe
if et fi:
if est utilisé pour introduire une condition. Le bloc de code qui suit est exécuté si la condition est vraie. fi marque la fin de ce bloc conditionnel. C'est la façon de fermer la structure conditionnelle en Bash, semblable à } en C ou Java.
cp:
La commande cp est utilisée pour copier des fichiers ou des répertoires. Dans ce script, cp "$source" "$2" tente de copier le fichier de l'emplacement source vers l'emplacement de destination.
Options de test:
-ne: Teste si deux nombres ne sont pas égaux.
-r: Vérifie si un fichier est lisible.
-f: Vérifie si le fichier est un fichier ordinaire.
-e: Vérifie si un fichier existe.
-w: Vérifie si un fichier ou un répertoire est accessible en écriture.

$1, $2, $3, etc., sont des variables spéciales en Bash qui représentent respectivement le premier, le deuxième, le troisième argument, et ainsi de suite, passés à un script lors de son exécution.
source=$1 assigne la valeur du premier argument passé au script à la variable source.
destination=$2 assigne la valeur du deuxième argument passé au script à la variable destination.


#!/bin/bash

if [ "$#" -ne 2 ]; then
    echo "Erreur : Le nombre d'arguments est incorrect."
    exit 1
fi

source=$1
destination=$2

if [ ! -r "$1" ]; then
    echo "Erreur : Le fichier source n'existe pas ou n'est pas lisible."
    exit 1
fi

if [ ! -f "$1" ]; then
    echo "Erreur : Le fichier source n'est pas un fichier ordinaire."
    exit 1
fi

if [ -e "$2" ]; then
    echo "Erreur : Le fichier de destination existe déjà."
    exit 1
fi

if [ ! -w "$(dirname "$2")" ]; then
    echo "Erreur : Le répertoire de destination n'est pas accessible en écriture."
    exit 1
fi

if cp "$source" "$2"; then
    echo "Copie réussie."
else
    echo "Erreur veuillez réessayer."
    exit 1
fi
